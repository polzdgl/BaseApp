@page "/"

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BaseApp - Overview</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
            color: #333;
        }

        .container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        h1, h2 {
            color: #444;
            margin-bottom: 1rem;
        }

        h1 {
            font-size: 2rem;
        }

        h2 {
            font-size: 1.5rem;
        }

        ul {
            padding-left: 1.5rem;
            margin-bottom: 1.5rem;
        }

            ul li {
                margin-bottom: 0.5rem;
            }

        pre {
            background: #f4f4f4;
            padding: 1rem;
            border-radius: 5px;
            overflow-x: auto;
            font-size: 0.9rem;
        }

        .section {
            margin-bottom: 2rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>BaseApp Project</h1>

        <div class="section">
            <h2>Overview</h2>
            <p>
                BaseApp is a web application built using a Blazor Web Assembly and an ASP.NET Web API with Controllers.
                It uses Entity Framework Core with a repository pattern for data access and Microsoft SQL Server as the database.
                Logging is implemented using Serilog, and API documentation is provided through Swagger.
            </p>
        </div>

        <div class="section">
            <h2>Features</h2>
            <ul>
                <li>User Management: Add, retrieve, and manage user data.</li>
                <li>Data Validation: Includes custom validation logic for phone numbers, email addresses, and dates of birth.</li>
                <li>Logging: Integrated with Serilog for structured and detailed logging.</li>
                <li>API Documentation: Interactive API documentation available via Swagger UI.</li>
                <li>Automated Database Creation: Automatically creates and migrates the database in development environments.</li>
                <li>Unit Testing: Unit tests implemented using xUnit and NSubstitute.</li>
            </ul>
        </div>

        <div class="section">
            <h2>Technologies Used</h2>
            <ul>
                <li>Frontend: Blazor Web Assembly</li>
                <li>Backend: ASP.NET Web API (with Controllers)</li>
                <li>Database: Microsoft SQL Server</li>
                <li>ORM: Entity Framework Core (with Repository Pattern)</li>
                <li>Logging: Serilog</li>
                <li>API Documentation: Swagger (OpenAPI)</li>
                <li>Unit Testing: xUnit with NSubstitute</li>
            </ul>
        </div>

        <div class="section">
            <h2>Setup Instructions</h2>
            <h3>Prerequisites</h3>
            <ul>
                <li>.NET SDK 9.0</li>
                <li>Microsoft SQL Server</li>
                <li>Any IDE (Visual Studio, VS Code, JetBrains Rider)</li>
            </ul>
            <h3>Steps to Run</h3>
            <ul>
                <li>
                    Clone the repository:
                    <pre>git clone https://github.com/polzdgl/BaseApp.git</pre>
                </li>
                <li>Open the solution in your IDE of choice.</li>
                <li>
                    Update the connection string in <code>appsettings.json</code>:
                    <pre>
{
  "ConnectionStrings": {
    "DefaultConnection": "Your-SQL-Server-Connection-String"
  }
}
                    </pre>
                </li>
                <li>Set the <code>BaseApp.API</code> and <code>BaseApp.Web</code> projects as the startup projects.</li>
                <li>Run the application in Development mode. The database and required tables will be created automatically.</li>
                <li>
                    Open the Swagger UI for API documentation:
                    <pre>http://localhost:&lt;your-port&gt;/swagger</pre>
                </li>
            </ul>
        </div>

        <div class="section">
            <h2>Folder Structure</h2>
            <ul>
                <li><strong>BaseApp.API:</strong> The ASP.NET Web API project.</li>
                <li><strong>BaseApp.AppHost:</strong> The main project responsible for hosting and running the application.</li>
                <li><strong>BaseApp.Shared:</strong> Contains shared utilities, validation classes, and DTOs.</li>
                <li><strong>BaseApp.Tests:</strong> Unit test project using xUnit and NSubstitute.</li>
                <li><strong>BaseApp.Data:</strong> The data layer project responsible for managing all data-related operations.</li>
                <li><strong>BaseApp.ServiceProvider:</strong> The business layer project with all the application logic.</li>
                <li><strong>BaseApp.Web:</strong> The presentation layer with the Blazor Web Assembly UI.</li>
            </ul>
        </div>

        <div class="section">
            <h2>EF Core Migration Scripts</h2>
            <ul>
                <li>
                    Run this command to create a new Migration:
                    <pre>dotnet ef migrations add InitialData --project BaseApp.Data --startup-project BaseApp.API</pre>
                </li>
                <li>
                    Run this command to apply the EF Core Migration:
                    <pre>dotnet ef database update --project BaseApp.Data --startup-project BaseApp.API</pre>
                </li>
            </ul>
        </div>
    </div>
</body>
</html>
